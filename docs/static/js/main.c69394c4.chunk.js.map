{"version":3,"sources":["components/Card.jsx","components/Cards.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","lang","url","fcolor","scolor","className","style","background","src","alt","Cards","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAwBeA,EApBF,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OAEhC,OACE,sBAAKC,UAAU,OAAOC,MAAO,CAC3BC,WAAW,4BAAD,OAA8BJ,EAA9B,aAAyCC,EAAzC,MADZ,UAIC,qBAAKI,IAAKN,EAAKO,IAAI,aACnB,6BAAKR,QC6CKS,EAtDD,WA2CZ,OACE,mCA3CW,CACX,CACET,KAAM,SAENC,IAAK,2CAELC,OAAQ,UAERC,OAAQ,WAGV,CACEH,KAAM,OAENC,IAAK,yCAELC,OAAQ,UAERC,OAAQ,WAGV,CACEH,KAAM,QAENC,IAAK,0CAELC,OAAQ,UAERC,OAAQ,WAGV,CACEH,KAAM,OAENC,IAAK,yCAELC,OAAQ,UAERC,OAAQ,YAOAO,KAAI,YAAgC,IAA9BV,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAAW,OAAO,cAAC,EAAD,CAAiBH,KAAMA,EAAMC,IAAKA,EAAKC,OAAQA,EAAQC,OAAQA,GAApDH,SCvCrDW,EALH,WAEV,OAAO,cAAC,EAAD,KCKMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c69394c4.chunk.js","sourcesContent":["import React from 'react'; \nimport PropTypes from 'prop-types';\nimport \"./Card.css\"\n\nconst Card = ({lang, url, fcolor, scolor}) => {\n\n  return (\n    <div className=\"card\" style={{ \n      background: `linear-gradient(to left, ${fcolor}, ${scolor})`,\n      \n    }}>\n     <img src={url} alt=\"lang.svg\"/> \n     <h3>{lang}</h3>\n    </div>\n  )\n}\n\nCard.propTypes = {\n  lang: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  fcolor: PropTypes.string.isRequired,\n  scolor: PropTypes.string.isRequired\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst Cards = () => {\n  const data = [\n    {\n      lang: \"Python\",\n\n      url: \"https://cdn.svgporn.com/logos/python.svg\",\n\n      fcolor: \"#00c3ff\",\n\n      scolor: \"#ffff1c\",\n    },\n\n    {\n      lang: \"Java\",\n\n      url: \"https://cdn.svgporn.com/logos/java.svg\",\n\n      fcolor: \"#D31027\",\n\n      scolor: \"#EA384D\",\n    },\n\n    {\n      lang: \"React\",\n\n      url: \"https://cdn.svgporn.com/logos/react.svg\",\n\n      fcolor: \"#000428\",\n\n      scolor: \"#004e92\",\n    },\n\n    {\n      lang: \"Perl\",\n\n      url: \"https://cdn.svgporn.com/logos/perl.svg\",\n\n      fcolor: \"#cc2b5e\",\n\n      scolor: \"#753a88\",\n    },\n  ];\n\n  return (\n    <>\n      {\n         data.map(({lang, url, fcolor, scolor})=>{return <Card key={lang} lang={lang} url={url} fcolor={fcolor} scolor={scolor}/> })\n      }\n      \n     \n    </>\n  );\n};\n\nexport default Cards;\n","import './App.css';\n// import Contador from './components/Contador';\n// import Contador from './components/Contador';\nimport Cards from './components/Cards';\n\nconst App = () => {\n  // return <Contador inicial={5} factor={2} />;\n  return <Cards />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}